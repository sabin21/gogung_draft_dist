import{CompressedTextureLoader,RGBA_PVRTC_2BPPV1_Format,RGBA_PVRTC_4BPPV1_Format,RGB_PVRTC_2BPPV1_Format,RGB_PVRTC_4BPPV1_Format}from"../../../build/three.module.js";var PVRLoader=function(r){CompressedTextureLoader.call(this,r)};PVRLoader.prototype=Object.assign(Object.create(CompressedTextureLoader.prototype),{constructor:PVRLoader,parse:function(r,a){var e=new Uint32Array(r,0,13),t={buffer:r,header:e,loadMipmaps:a};return 55727696===e[0]?PVRLoader._parseV3(t):559044176===e[11]?PVRLoader._parseV2(t):void console.error("THREE.PVRLoader: Unknown PVR format.")}}),PVRLoader._parseV3=function(r){var a,e,t=r.header,o=t[12],P=t[2],m=t[6],p=t[7],V=t[10],R=t[11];switch(P){case 0:a=2,e=RGB_PVRTC_2BPPV1_Format;break;case 1:a=2,e=RGBA_PVRTC_2BPPV1_Format;break;case 2:a=4,e=RGB_PVRTC_4BPPV1_Format;break;case 3:a=4,e=RGBA_PVRTC_4BPPV1_Format;break;default:console.error("THREE.PVRLoader: Unsupported PVR format:",P)}return r.dataPtr=52+o,r.bpp=a,r.format=e,r.width=p,r.height=m,r.numSurfaces=V,r.numMipmaps=R,r.isCubemap=6===V,PVRLoader._extract(r)},PVRLoader._parseV2=function(r){var a,e,t=r.header,o=t[0],P=t[1],m=t[2],p=t[3],V=t[4],R=t[10],_=t[12],s=255&V,n=R>0;return 25===s?(e=n?RGBA_PVRTC_4BPPV1_Format:RGB_PVRTC_4BPPV1_Format,a=4):24===s?(e=n?RGBA_PVRTC_2BPPV1_Format:RGB_PVRTC_2BPPV1_Format,a=2):console.error("THREE.PVRLoader: Unknown PVR format:",s),r.dataPtr=o,r.bpp=a,r.format=e,r.width=m,r.height=P,r.numSurfaces=_,r.numMipmaps=p+1,r.isCubemap=6===_,PVRLoader._extract(r)},PVRLoader._extract=function(r){var a,e={mipmaps:[],width:r.width,height:r.height,format:r.format,mipmapCount:r.numMipmaps,isCubemap:r.isCubemap},t=r.buffer,o=r.dataPtr,P=r.bpp,m=r.numSurfaces,p=0,V=0,R=0,_=0,s=0;2===P?(V=8,R=4):(V=4,R=4),a=V*R*P/8,e.mipmaps.length=r.numMipmaps*m;for(var n=0;n<r.numMipmaps;){var i=r.width>>n,d=r.height>>n;(_=i/V)<2&&(_=2),(s=d/R)<2&&(s=2),p=_*s*a;for(var u=0;u<m;u++){var c={data:new Uint8Array(t,o,p),width:i,height:d};e.mipmaps[u*r.numMipmaps+n]=c,o+=p}n++}return e};export{PVRLoader};