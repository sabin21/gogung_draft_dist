import{BufferGeometry,Color,FileLoader,Float32BufferAttribute,Loader,Matrix3,Path,ShapePath,Vector2,Vector3}from"../../../build/three.module.js";var SVGLoader=function(e){Loader.call(this,e)};SVGLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:SVGLoader,load:function(e,t,r,a){var o=this,n=new FileLoader(o.manager);n.setPath(o.path),n.load(e,(function(e){t(o.parse(e))}),r,a)},parse:function(e){function t(e,t,a,o,n,i,s,c){o=o*Math.PI/180,t=Math.abs(t),a=Math.abs(a);var l=(s.x-c.x)/2,u=(s.y-c.y)/2,y=Math.cos(o)*l+Math.sin(o)*u,h=-Math.sin(o)*l+Math.cos(o)*u,p=t*t,d=a*a,f=y*y,b=h*h,v=f/p+b/d;if(v>1){var x=Math.sqrt(v);p=(t*=x)*t,d=(a*=x)*a}var g=p*b+d*f,k=(p*d-g)/g,m=Math.sqrt(Math.max(0,k));n===i&&(m=-m);var w=m*t*h/a,M=-m*a*y/t,V=Math.cos(o)*w-Math.sin(o)*M+(s.x+c.x)/2,A=Math.sin(o)*w+Math.cos(o)*M+(s.y+c.y)/2,T=r(1,0,(y-w)/t,(h-M)/a),S=r((y-w)/t,(h-M)/a,(-y-w)/t,(-h-M)/a)%(2*Math.PI);e.currentPath.absellipse(V,A,t,a,T,T+S,0===i,o)}function r(e,t,r,a){var o=e*r+t*a,n=Math.sqrt(e*e+t*t)*Math.sqrt(r*r+a*a),i=Math.acos(Math.max(-1,Math.min(1,o/n)));return e*a-t*r<0&&(i=-i),i}function a(e,t){function r(r,a,o){void 0===o&&(o=function(e){return e}),e.hasAttribute(r)&&(t[a]=o(e.getAttribute(r))),""!==e.style[r]&&(t[a]=o(e.style[r]))}function a(e){return Math.max(0,Math.min(1,e))}function o(e){return Math.max(0,e)}return t=Object.assign({},t),r("fill","fill"),r("fill-opacity","fillOpacity",a),r("stroke","stroke"),r("stroke-opacity","strokeOpacity",a),r("stroke-width","strokeWidth",o),r("stroke-linejoin","strokeLineJoin"),r("stroke-linecap","strokeLineCap"),r("stroke-miterlimit","strokeMiterLimit",o),t}function o(e,t){return e-(t-e)}function n(e){for(var t=e.split(/[\s,]+|(?=\s?[+\-])/),r=0;r<t.length;r++){var a=t[r];if(a.indexOf(".")!==a.lastIndexOf("."))for(var o=a.split("."),n=2;n<o.length;n++)t.splice(r+n-1,0,"0."+o[n]);t[r]=parseFloat(a)}return t}function i(e){var t=e.elements;return Math.sqrt(t[0]*t[0]+t[1]*t[1])}function s(e){var t=e.elements;return Math.sqrt(t[3]*t[3]+t[4]*t[4])}console.log("THREE.SVGLoader");var c=[],l=[],u=new Matrix3,y=new Matrix3,h=new Matrix3,p=new Matrix3,d=new Vector2,f=new Vector3,b=new Matrix3;console.time("THREE.SVGLoader: DOMParser");var v=(new DOMParser).parseFromString(e,"image/svg+xml");console.timeEnd("THREE.SVGLoader: DOMParser"),console.time("THREE.SVGLoader: Parse"),function e(r,v){if(1===r.nodeType){var x=function(e){if(!e.hasAttribute("transform"))return null;var t=function(e){for(var t=new Matrix3,r=u,a=e.getAttribute("transform").split(")"),o=a.length-1;o>=0;o--){var i=a[o].trim();if(""!==i){var s=i.indexOf("("),c=i.length;if(s>0&&s<c){var l=i.substr(0,s),d=n(i.substr(s+1,c-s-1));switch(r.identity(),l){case"translate":if(d.length>=1){var f=d[0],b=f;d.length>=2&&(b=d[1]),r.translate(f,b)}break;case"rotate":if(d.length>=1){var v,x=0,g=0;v=-d[0]*Math.PI/180,d.length>=3&&(x=d[1],g=d[2]),y.identity().translate(-x,-g),h.identity().rotate(v),p.multiplyMatrices(h,y),y.identity().translate(x,g),r.multiplyMatrices(y,p)}break;case"scale":if(d.length>=1){var k=d[0],m=k;d.length>=2&&(m=d[1]),r.scale(k,m)}break;case"skewX":1===d.length&&r.set(1,Math.tan(d[0]*Math.PI/180),0,0,1,0,0,0,1);break;case"skewY":1===d.length&&r.set(1,0,0,Math.tan(d[0]*Math.PI/180),1,0,0,0,1);break;case"matrix":6===d.length&&r.set(d[0],d[2],d[4],d[1],d[3],d[5],0,0,1)}}t.premultiply(r)}}return t}(e);return l.length>0&&t.premultiply(l[l.length-1]),b.copy(t),l.push(t),t}(r),g=null;switch(r.nodeName){case"svg":break;case"g":v=a(r,v);break;case"path":v=a(r,v),r.hasAttribute("d")&&(g=function(e){for(var r=new ShapePath,a=new Vector2,i=new Vector2,s=new Vector2,c=!0,l=!1,u=e.getAttribute("d").match(/[a-df-z][^a-df-z]*/gi),y=0,h=u.length;y<h;y++){var p=u[y],d=p.charAt(0),f=p.substr(1).trim();switch(!0===c&&(l=!0,c=!1),d){case"M":for(var b=0,v=(m=n(f)).length;b<v;b+=2)a.x=m[b+0],a.y=m[b+1],i.x=a.x,i.y=a.y,0===b?r.moveTo(a.x,a.y):r.lineTo(a.x,a.y),0===b&&!0===l&&s.copy(a);break;case"H":for(b=0,v=(m=n(f)).length;b<v;b++)a.x=m[b],i.x=a.x,i.y=a.y,r.lineTo(a.x,a.y),0===b&&!0===l&&s.copy(a);break;case"V":for(b=0,v=(m=n(f)).length;b<v;b++)a.y=m[b],i.x=a.x,i.y=a.y,r.lineTo(a.x,a.y),0===b&&!0===l&&s.copy(a);break;case"L":for(b=0,v=(m=n(f)).length;b<v;b+=2)a.x=m[b+0],a.y=m[b+1],i.x=a.x,i.y=a.y,r.lineTo(a.x,a.y),0===b&&!0===l&&s.copy(a);break;case"C":for(b=0,v=(m=n(f)).length;b<v;b+=6)r.bezierCurveTo(m[b+0],m[b+1],m[b+2],m[b+3],m[b+4],m[b+5]),i.x=m[b+2],i.y=m[b+3],a.x=m[b+4],a.y=m[b+5],0===b&&!0===l&&s.copy(a);break;case"S":for(b=0,v=(m=n(f)).length;b<v;b+=4)r.bezierCurveTo(o(a.x,i.x),o(a.y,i.y),m[b+0],m[b+1],m[b+2],m[b+3]),i.x=m[b+0],i.y=m[b+1],a.x=m[b+2],a.y=m[b+3],0===b&&!0===l&&s.copy(a);break;case"Q":for(b=0,v=(m=n(f)).length;b<v;b+=4)r.quadraticCurveTo(m[b+0],m[b+1],m[b+2],m[b+3]),i.x=m[b+0],i.y=m[b+1],a.x=m[b+2],a.y=m[b+3],0===b&&!0===l&&s.copy(a);break;case"T":for(b=0,v=(m=n(f)).length;b<v;b+=2){var x=o(a.x,i.x),g=o(a.y,i.y);r.quadraticCurveTo(x,g,m[b+0],m[b+1]),i.x=x,i.y=g,a.x=m[b+0],a.y=m[b+1],0===b&&!0===l&&s.copy(a)}break;case"A":for(b=0,v=(m=n(f)).length;b<v;b+=7){var k=a.clone();a.x=m[b+5],a.y=m[b+6],i.x=a.x,i.y=a.y,t(r,m[b],m[b+1],m[b+2],m[b+3],m[b+4],k,a),0===b&&!0===l&&s.copy(a)}break;case"m":for(b=0,v=(m=n(f)).length;b<v;b+=2)a.x+=m[b+0],a.y+=m[b+1],i.x=a.x,i.y=a.y,0===b?r.moveTo(a.x,a.y):r.lineTo(a.x,a.y),0===b&&!0===l&&s.copy(a);break;case"h":for(b=0,v=(m=n(f)).length;b<v;b++)a.x+=m[b],i.x=a.x,i.y=a.y,r.lineTo(a.x,a.y),0===b&&!0===l&&s.copy(a);break;case"v":for(b=0,v=(m=n(f)).length;b<v;b++)a.y+=m[b],i.x=a.x,i.y=a.y,r.lineTo(a.x,a.y),0===b&&!0===l&&s.copy(a);break;case"l":for(b=0,v=(m=n(f)).length;b<v;b+=2)a.x+=m[b+0],a.y+=m[b+1],i.x=a.x,i.y=a.y,r.lineTo(a.x,a.y),0===b&&!0===l&&s.copy(a);break;case"c":for(b=0,v=(m=n(f)).length;b<v;b+=6)r.bezierCurveTo(a.x+m[b+0],a.y+m[b+1],a.x+m[b+2],a.y+m[b+3],a.x+m[b+4],a.y+m[b+5]),i.x=a.x+m[b+2],i.y=a.y+m[b+3],a.x+=m[b+4],a.y+=m[b+5],0===b&&!0===l&&s.copy(a);break;case"s":for(b=0,v=(m=n(f)).length;b<v;b+=4)r.bezierCurveTo(o(a.x,i.x),o(a.y,i.y),a.x+m[b+0],a.y+m[b+1],a.x+m[b+2],a.y+m[b+3]),i.x=a.x+m[b+0],i.y=a.y+m[b+1],a.x+=m[b+2],a.y+=m[b+3],0===b&&!0===l&&s.copy(a);break;case"q":for(b=0,v=(m=n(f)).length;b<v;b+=4)r.quadraticCurveTo(a.x+m[b+0],a.y+m[b+1],a.x+m[b+2],a.y+m[b+3]),i.x=a.x+m[b+0],i.y=a.y+m[b+1],a.x+=m[b+2],a.y+=m[b+3],0===b&&!0===l&&s.copy(a);break;case"t":for(b=0,v=(m=n(f)).length;b<v;b+=2)x=o(a.x,i.x),g=o(a.y,i.y),r.quadraticCurveTo(x,g,a.x+m[b+0],a.y+m[b+1]),i.x=x,i.y=g,a.x=a.x+m[b+0],a.y=a.y+m[b+1],0===b&&!0===l&&s.copy(a);break;case"a":var m;for(b=0,v=(m=n(f)).length;b<v;b+=7)k=a.clone(),a.x+=m[b+5],a.y+=m[b+6],i.x=a.x,i.y=a.y,t(r,m[b],m[b+1],m[b+2],m[b+3],m[b+4],k,a),0===b&&!0===l&&s.copy(a);break;case"Z":case"z":r.currentPath.autoClose=!0,r.currentPath.curves.length>0&&(a.copy(s),r.currentPath.currentPoint.copy(a),c=!0);break;default:console.warn(p)}l=!1}return r}(r));break;case"rect":v=a(r,v),g=function(e){var t=parseFloat(e.getAttribute("x")||0),r=parseFloat(e.getAttribute("y")||0),a=parseFloat(e.getAttribute("rx")||0),o=parseFloat(e.getAttribute("ry")||0),n=parseFloat(e.getAttribute("width")),i=parseFloat(e.getAttribute("height")),s=new ShapePath;return s.moveTo(t+2*a,r),s.lineTo(t+n-2*a,r),(0!==a||0!==o)&&s.bezierCurveTo(t+n,r,t+n,r,t+n,r+2*o),s.lineTo(t+n,r+i-2*o),(0!==a||0!==o)&&s.bezierCurveTo(t+n,r+i,t+n,r+i,t+n-2*a,r+i),s.lineTo(t+2*a,r+i),(0!==a||0!==o)&&s.bezierCurveTo(t,r+i,t,r+i,t,r+i-2*o),s.lineTo(t,r+2*o),(0!==a||0!==o)&&s.bezierCurveTo(t,r,t,r,t+2*a,r),s}(r);break;case"polygon":v=a(r,v),g=function(e){var t=new ShapePath,r=0;return e.getAttribute("points").replace(/(-?[\d\.?]+)[,|\s](-?[\d\.?]+)/g,(function(e,a,o){var n=parseFloat(a),i=parseFloat(o);0===r?t.moveTo(n,i):t.lineTo(n,i),r++})),t.currentPath.autoClose=!0,t}(r);break;case"polyline":v=a(r,v),g=function(e){var t=new ShapePath,r=0;return e.getAttribute("points").replace(/(-?[\d\.?]+)[,|\s](-?[\d\.?]+)/g,(function(e,a,o){var n=parseFloat(a),i=parseFloat(o);0===r?t.moveTo(n,i):t.lineTo(n,i),r++})),t.currentPath.autoClose=!1,t}(r);break;case"circle":v=a(r,v),g=function(e){var t=parseFloat(e.getAttribute("cx")),r=parseFloat(e.getAttribute("cy")),a=parseFloat(e.getAttribute("r")),o=new Path;o.absarc(t,r,a,0,2*Math.PI);var n=new ShapePath;return n.subPaths.push(o),n}(r);break;case"ellipse":v=a(r,v),g=function(e){var t=parseFloat(e.getAttribute("cx")),r=parseFloat(e.getAttribute("cy")),a=parseFloat(e.getAttribute("rx")),o=parseFloat(e.getAttribute("ry")),n=new Path;n.absellipse(t,r,a,o,0,2*Math.PI);var i=new ShapePath;return i.subPaths.push(n),i}(r);break;case"line":v=a(r,v),g=function(e){var t=parseFloat(e.getAttribute("x1")),r=parseFloat(e.getAttribute("y1")),a=parseFloat(e.getAttribute("x2")),o=parseFloat(e.getAttribute("y2")),n=new ShapePath;return n.moveTo(t,r),n.lineTo(a,o),n.currentPath.autoClose=!1,n}(r);break;default:console.log(r)}g&&(void 0!==v.fill&&"none"!==v.fill&&g.color.setStyle(v.fill),function(e,t){function r(e){f.set(e.x,e.y,1).applyMatrix3(t),e.set(f.x,f.y)}for(var a=function(e){return 0!==e.elements[1]||0!==e.elements[3]}(t),o=e.subPaths,n=0,c=o.length;n<c;n++)for(var l=o[n].curves,u=0;u<l.length;u++){var y=l[u];y.isLineCurve?(r(y.v1),r(y.v2)):y.isCubicBezierCurve?(r(y.v0),r(y.v1),r(y.v2),r(y.v3)):y.isQuadraticBezierCurve?(r(y.v0),r(y.v1),r(y.v2)):y.isEllipseCurve&&(a&&console.warn("SVGLoader: Elliptic arc or ellipse rotation or skewing is not implemented."),d.set(y.aX,y.aY),r(d),y.aX=d.x,y.aY=d.y,y.xRadius*=i(t),y.yRadius*=s(t))}}(g,b),c.push(g),g.userData={node:r,style:v});for(var k=r.childNodes,m=0;m<k.length;m++)e(k[m],v);x&&(l.pop(),l.length>0?b.copy(l[l.length-1]):b.identity())}}(v.documentElement,{fill:"#000",fillOpacity:1,strokeOpacity:1,strokeWidth:1,strokeLineJoin:"miter",strokeLineCap:"butt",strokeMiterLimit:4});var x={paths:c,xml:v.documentElement};return console.timeEnd("THREE.SVGLoader: Parse"),x}}),SVGLoader.getStrokeStyle=function(e,t,r,a,o){return{strokeColor:t=void 0!==t?t:"#000",strokeWidth:e=void 0!==e?e:1,strokeLineJoin:r=void 0!==r?r:"miter",strokeLineCap:a=void 0!==a?a:"butt",strokeMiterLimit:o=void 0!==o?o:4}},SVGLoader.pointsToStroke=function(e,t,r,a){var o=[],n=[],i=[];if(0===SVGLoader.pointsToStrokeWithBuffers(e,t,r,a,o,n,i))return null;var s=new BufferGeometry;return s.addAttribute("position",new Float32BufferAttribute(o,3)),s.addAttribute("normal",new Float32BufferAttribute(n,3)),s.addAttribute("uv",new Float32BufferAttribute(i,2)),s},SVGLoader.pointsToStrokeWithBuffers=function(){var e=new Vector2,t=new Vector2,r=new Vector2,a=new Vector2,o=new Vector2,n=new Vector2,i=new Vector2,s=new Vector2,c=new Vector2,l=new Vector2,u=new Vector2,y=new Vector2,h=new Vector2,p=new Vector2,d=new Vector2,f=new Vector2,b=new Vector2;return function(v,x,g,k,m,w,M,V){g=void 0!==g?g:12,k=void 0!==k?k:.001,V=void 0!==V?V:0;var A=(v=function(e){for(var t=!1,r=1,a=e.length-1;r<a;r++)if(e[r].distanceTo(e[r+1])<k){t=!0;break}if(!t)return e;var o=[];for(o.push(e[0]),r=1,a=e.length-1;r<a;r++)e[r].distanceTo(e[r+1])>=k&&o.push(e[r]);return o.push(e[e.length-1]),o}(v)).length;if(A<2)return 0;var T,S,P,L,F,C=v[0].equals(v[A-1]),z=v[0],E=x.strokeWidth/2,G=1/(A-1),q=0,O=!1,B=0,I=3*V,R=2*V;U(v[0],v[1],e).multiplyScalar(E),s.copy(v[0]).sub(e),c.copy(v[0]).add(e),l.copy(s),u.copy(c);for(var H=1;H<A;H++){T=v[H],S=H===A-1?C?v[1]:void 0:v[H+1];var W=e;U(z,T,W),r.copy(W).multiplyScalar(E),y.copy(T).sub(r),h.copy(T).add(r);var j=q+G;if(P=!1,void 0!==S){U(T,S,t),r.copy(t).multiplyScalar(E),p.copy(T).sub(r),d.copy(T).add(r),L=!0,r.subVectors(S,z),W.dot(r)<0&&(L=!1),1===H&&(O=L),r.subVectors(S,T),r.normalize();var J=Math.abs(W.dot(r));if(0!==J){var D=E/J;r.multiplyScalar(-D),a.subVectors(T,z),o.copy(a).setLength(D).add(r),f.copy(o).negate();var X=o.length(),Y=a.length();a.divideScalar(Y),n.subVectors(S,T);var N=n.length();switch(n.divideScalar(N),a.dot(f)<Y&&n.dot(f)<N&&(P=!0),b.copy(o).add(T),f.add(T),F=!1,P?L?(d.copy(f),h.copy(f)):(p.copy(f),y.copy(f)):ee(),x.strokeLineJoin){case"bevel":te(L,P,j);break;case"round":re(L,P),L?_(T,y,p,j,0):_(T,d,h,j,1);break;default:var Q=E*x.strokeMiterLimit/X;if(Q<1){if("miter-clip"!==x.strokeLineJoin){te(L,P,j);break}re(L,P),L?(n.subVectors(b,y).multiplyScalar(Q).add(y),i.subVectors(b,p).multiplyScalar(Q).add(p),$(y,j,0),$(n,j,0),$(T,j,.5),$(T,j,.5),$(n,j,0),$(i,j,0),$(T,j,.5),$(i,j,0),$(p,j,0)):(n.subVectors(b,h).multiplyScalar(Q).add(h),i.subVectors(b,d).multiplyScalar(Q).add(d),$(h,j,1),$(n,j,1),$(T,j,.5),$(T,j,.5),$(n,j,1),$(i,j,1),$(T,j,.5),$(i,j,1),$(d,j,1))}else P?(L?($(c,q,1),$(s,q,0),$(b,j,0),$(c,q,1),$(b,j,0),$(f,j,1)):($(c,q,1),$(s,q,0),$(b,j,1),$(s,q,0),$(f,j,0),$(b,j,1)),L?p.copy(b):d.copy(b)):L?($(y,j,0),$(b,j,0),$(T,j,.5),$(T,j,.5),$(b,j,0),$(p,j,0)):($(h,j,1),$(b,j,1),$(T,j,.5),$(T,j,.5),$(b,j,1),$(d,j,1)),F=!0}}else ee()}else ee();C||H!==A-1||ae(v[0],l,u,L,!0,q),q=j,z=T,s.copy(p),c.copy(d)}if(C){if(P&&m){var Z=b,K=f;O!==L&&(Z=f,K=b),L?(K.toArray(m,0),K.toArray(m,9),F&&Z.toArray(m,3)):(K.toArray(m,3),K.toArray(m,9),F&&Z.toArray(m,0))}}else ae(T,y,h,L,!1,j);return B;function U(e,t,r){return r.subVectors(t,e),r.set(-r.y,r.x).normalize()}function $(e,t,r){m&&(m[I]=e.x,m[I+1]=e.y,m[I+2]=0,w&&(w[I]=0,w[I+1]=0,w[I+2]=1),I+=3,M&&(M[R]=t,M[R+1]=r,R+=2)),B+=3}function _(o,n,i,s,c){e.copy(n).sub(o).normalize(),t.copy(i).sub(o).normalize();var l=Math.PI,u=e.dot(t);Math.abs(u)<1&&(l=Math.abs(Math.acos(u))),l/=g,r.copy(n);for(var y=0,h=g-1;y<h;y++)a.copy(r).rotateAround(o,l),$(r,s,c),$(a,s,c),$(o,s,.5),r.copy(a);$(a,s,c),$(i,s,c),$(o,s,.5)}function ee(){$(c,q,1),$(s,q,0),$(y,j,0),$(c,q,1),$(y,j,1),$(h,j,0)}function te(e,t,r){t?e?($(c,q,1),$(s,q,0),$(y,j,0),$(c,q,1),$(y,j,0),$(f,j,1),$(y,r,0),$(p,r,0),$(f,r,.5)):($(c,q,1),$(s,q,0),$(h,j,1),$(s,q,0),$(f,j,0),$(h,j,1),$(h,r,1),$(d,r,0),$(f,r,.5)):e?($(y,r,0),$(p,r,0),$(T,r,.5)):($(h,r,1),$(d,r,0),$(T,r,.5))}function re(e,t){t&&(e?($(c,q,1),$(s,q,0),$(y,j,0),$(c,q,1),$(y,j,0),$(f,j,1),$(y,q,0),$(T,j,.5),$(f,j,1),$(T,j,.5),$(p,q,0),$(f,j,1)):($(c,q,1),$(s,q,0),$(h,j,1),$(s,q,0),$(f,j,0),$(h,j,1),$(h,q,1),$(f,j,0),$(T,j,.5),$(T,j,.5),$(f,j,0),$(d,q,1)))}function ae(o,n,i,s,c,l){switch(x.strokeLineCap){case"round":c?_(o,i,n,l,.5):_(o,n,i,l,.5);break;case"square":if(c)e.subVectors(n,o),t.set(e.y,-e.x),r.addVectors(e,t).add(o),a.subVectors(t,e).add(o),s?(r.toArray(m,3),a.toArray(m,0),a.toArray(m,9)):(r.toArray(m,3),r.toArray(m,9),a.toArray(m,0));else{e.subVectors(i,o),t.set(e.y,-e.x),r.addVectors(e,t).add(o),a.subVectors(t,e).add(o);var u=m.length;s?(r.toArray(m,u-3),a.toArray(m,u-6),a.toArray(m,u-12)):(r.toArray(m,u-6),a.toArray(m,u-3),a.toArray(m,u-12))}}}}}();export{SVGLoader};