import{CompressedTextureLoader,RGBAFormat,RGBA_S3TC_DXT3_Format,RGBA_S3TC_DXT5_Format,RGB_ETC1_Format,RGB_S3TC_DXT1_Format}from"../../../build/three.module.js";var DDSLoader=function(r){CompressedTextureLoader.call(this,r)};DDSLoader.prototype=Object.assign(Object.create(CompressedTextureLoader.prototype),{constructor:DDSLoader,parse:function(r,a){var e={mipmaps:[],width:0,height:0,format:null,mipmapCount:1};function o(r){return r.charCodeAt(0)+(r.charCodeAt(1)<<8)+(r.charCodeAt(2)<<16)+(r.charCodeAt(3)<<24)}function t(r,a,e,o){for(var t=e*o*4,m=new Uint8Array(r,a,t),n=new Uint8Array(t),i=0,p=0,s=0;s<o;s++)for(var u=0;u<e;u++){var d=m[p],c=m[++p],C=m[++p],h=m[++p];p++,n[i]=C,n[++i]=c,n[++i]=d,n[++i]=h,i++}return n}var m,n=o("DXT1"),i=o("DXT3"),p=o("DXT5"),s=o("ETC1"),u=new Int32Array(r,0,31);if(542327876!==u[0])return console.error("THREE.DDSLoader.parse: Invalid magic number in DDS header."),e;if(4&!u[20])return console.error("THREE.DDSLoader.parse: Unsupported format, must contain a FourCC code."),e;var d,c=u[21],C=!1;switch(c){case n:m=8,e.format=RGB_S3TC_DXT1_Format;break;case i:m=16,e.format=RGBA_S3TC_DXT3_Format;break;case p:m=16,e.format=RGBA_S3TC_DXT5_Format;break;case s:m=8,e.format=RGB_ETC1_Format;break;default:if(!(32===u[22]&&16711680&u[23]&&65280&u[24]&&255&u[25]&&4278190080&u[26]))return console.error("THREE.DDSLoader.parse: Unsupported FourCC code ",(d=c,String.fromCharCode(255&d,d>>8&255,d>>16&255,d>>24&255))),e;C=!0,m=64,e.format=RGBAFormat}e.mipmapCount=1,131072&u[2]&&!1!==a&&(e.mipmapCount=Math.max(1,u[7]));var h=u[28];if(e.isCubemap=!!(512&h),e.isCubemap&&(!(1024&h)||!(2048&h)||!(4096&h)||!(8192&h)||!(16384&h)||!(32768&h)))return console.error("THREE.DDSLoader.parse: Incomplete cubemap faces"),e;e.width=u[4],e.height=u[3];for(var D=u[1]+4,T=e.isCubemap?6:1,f=0;f<T;f++)for(var _=e.width,S=e.height,l=0;l<e.mipmapCount;l++){if(C)var v=(A=t(r,D,_,S)).length;else{v=Math.max(4,_)/4*Math.max(4,S)/4*m;var A=new Uint8Array(r,D,v)}var R={data:A,width:_,height:S};e.mipmaps.push(R),D+=v,_=Math.max(_>>1,1),S=Math.max(S>>1,1)}return e}});export{DDSLoader};