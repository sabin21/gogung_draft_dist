import{ObjectManipulator}from"../../utils/ObjectManipulator.js";const DefaultWorkerPayloadHandler=function(e){this.parser=e,this.logging={enabled:!1,debug:!1}};DefaultWorkerPayloadHandler.prototype={constructor:DefaultWorkerPayloadHandler,handlePayload:function(e){if(e.logging&&(this.logging.enabled=!0===e.logging.enabled,this.logging.debug=!0===e.logging.debug),"parse"===e.cmd){let r,o=this,s={callbackOnAssetAvailable:function(e){self.postMessage(e)},callbackOnProgress:function(e){o.logging.enabled&&o.logging.debug&&console.debug("WorkerRunner: progress: "+e)}},n=this.parser;"function"==typeof n.setLogging&&n.setLogging(this.logging.enabled,this.logging.debug),ObjectManipulator.applyProperties(n,e.params),ObjectManipulator.applyProperties(n,e.materials),ObjectManipulator.applyProperties(n,s),r=e.params&&void 0!==e.params.index&&null!==e.params.index?this.resourceDescriptors[e.params.index].content:e.data.input;let t="execute";"function"==typeof n.getParseFunctionName&&(t=n.getParseFunctionName()),e.usesMeshDisassembler||n[t](r,e.data.options),this.logging.enabled&&console.log("WorkerRunner: Run complete!"),self.postMessage({cmd:"completeOverall",msg:"WorkerRunner completed run."})}else console.error("WorkerRunner: Received unknown command: "+e.cmd)}};const WorkerRunner=function(e){this.resourceDescriptors=[],this.payloadHandler=e;let r=this;self.addEventListener("message",(function(e){r.processMessage(e.data)}),!1)};WorkerRunner.prototype={constructor:WorkerRunner,processMessage:function(e){if(e.data.resourceDescriptors&&0===this.resourceDescriptors.length)for(let r in e.data.resourceDescriptors)this.resourceDescriptors.push(e.data.resourceDescriptors[r]);this.payloadHandler.handlePayload(e)}};export{WorkerRunner,DefaultWorkerPayloadHandler};