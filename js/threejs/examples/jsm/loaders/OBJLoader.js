import{BufferGeometry,FileLoader,Float32BufferAttribute,Group,LineBasicMaterial,LineSegments,Loader,Material,Mesh,MeshPhongMaterial,NoColors,Points,PointsMaterial,VertexColors}from"../../../build/three.module.js";var OBJLoader=function(){var t=/^[og]\s*(.+)?/,e=/^mtllib /,r=/^usemtl /;function i(){var t={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materialLibraries:[],startObject:function(t,e){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=t,void(this.object.fromDeclaration=!1!==e);var r=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object={name:t||"",fromDeclaration:!1!==e,geometry:{vertices:[],normals:[],colors:[],uvs:[]},materials:[],smooth:!0,startMaterial:function(t,e){var r=this._finalize(!1);r&&(r.inherited||r.groupCount<=0)&&this.materials.splice(r.index,1);var i={index:this.materials.length,name:t||"",mtllib:Array.isArray(e)&&e.length>0?e[e.length-1]:"",smooth:void 0!==r?r.smooth:this.smooth,groupStart:void 0!==r?r.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(t){var e={index:"number"==typeof t?t:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return e.clone=this.clone.bind(e),e}};return this.materials.push(i),i},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(t){var e=this.currentMaterial();if(e&&-1===e.groupEnd&&(e.groupEnd=this.geometry.vertices.length/3,e.groupCount=e.groupEnd-e.groupStart,e.inherited=!1),t&&this.materials.length>1)for(var r=this.materials.length-1;r>=0;r--)this.materials[r].groupCount<=0&&this.materials.splice(r,1);return t&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),e}},r&&r.name&&"function"==typeof r.clone){var i=r.clone(0);i.inherited=!0,this.object.materials.push(i)}this.objects.push(this.object)},finalize:function(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(t,e){var r=parseInt(t,10);return 3*(r>=0?r-1:r+e/3)},parseNormalIndex:function(t,e){var r=parseInt(t,10);return 3*(r>=0?r-1:r+e/3)},parseUVIndex:function(t,e){var r=parseInt(t,10);return 2*(r>=0?r-1:r+e/2)},addVertex:function(t,e,r){var i=this.vertices,s=this.object.geometry.vertices;s.push(i[t+0],i[t+1],i[t+2]),s.push(i[e+0],i[e+1],i[e+2]),s.push(i[r+0],i[r+1],i[r+2])},addVertexPoint:function(t){var e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])},addVertexLine:function(t){var e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])},addNormal:function(t,e,r){var i=this.normals,s=this.object.geometry.normals;s.push(i[t+0],i[t+1],i[t+2]),s.push(i[e+0],i[e+1],i[e+2]),s.push(i[r+0],i[r+1],i[r+2])},addColor:function(t,e,r){var i=this.colors,s=this.object.geometry.colors;s.push(i[t+0],i[t+1],i[t+2]),s.push(i[e+0],i[e+1],i[e+2]),s.push(i[r+0],i[r+1],i[r+2])},addUV:function(t,e,r){var i=this.uvs,s=this.object.geometry.uvs;s.push(i[t+0],i[t+1]),s.push(i[e+0],i[e+1]),s.push(i[r+0],i[r+1])},addUVLine:function(t){var e=this.uvs;this.object.geometry.uvs.push(e[t+0],e[t+1])},addFace:function(t,e,r,i,s,a,o,n,l){var h=this.vertices.length,c=this.parseVertexIndex(t,h),u=this.parseVertexIndex(e,h),p=this.parseVertexIndex(r,h);if(this.addVertex(c,u,p),this.colors.length>0&&this.addColor(c,u,p),void 0!==i&&""!==i){var m=this.uvs.length;c=this.parseUVIndex(i,m),u=this.parseUVIndex(s,m),p=this.parseUVIndex(a,m),this.addUV(c,u,p)}if(void 0!==o&&""!==o){var d=this.normals.length;c=this.parseNormalIndex(o,d),u=o===n?c:this.parseNormalIndex(n,d),p=o===l?c:this.parseNormalIndex(l,d),this.addNormal(c,u,p)}},addPointGeometry:function(t){this.object.geometry.type="Points";for(var e=this.vertices.length,r=0,i=t.length;r<i;r++)this.addVertexPoint(this.parseVertexIndex(t[r],e))},addLineGeometry:function(t,e){this.object.geometry.type="Line";for(var r=this.vertices.length,i=this.uvs.length,s=0,a=t.length;s<a;s++)this.addVertexLine(this.parseVertexIndex(t[s],r));var o=0;for(a=e.length;o<a;o++)this.addUVLine(this.parseUVIndex(e[o],i))}};return t.startObject("",!1),t}function s(t){Loader.call(this,t),this.materials=null}return s.prototype=Object.assign(Object.create(Loader.prototype),{constructor:s,load:function(t,e,r,i){var s=this,a=new FileLoader(s.manager);a.setPath(this.path),a.load(t,(function(t){e(s.parse(t))}),r,i)},setMaterials:function(t){return this.materials=t,this},parse:function(s){console.time("OBJLoader");var a=new i;-1!==s.indexOf("\r\n")&&(s=s.replace(/\r\n/g,"\n")),-1!==s.indexOf("\\\n")&&(s=s.replace(/\\\n/g,""));for(var o=s.split("\n"),n="",l="",h=[],c="function"==typeof"".trimLeft,u=0,p=o.length;u<p;u++)if(n=o[u],0!==(n=c?n.trimLeft():n.trim()).length&&"#"!==(l=n.charAt(0)))if("v"===l){var m=n.split(/\s+/);switch(m[0]){case"v":a.vertices.push(parseFloat(m[1]),parseFloat(m[2]),parseFloat(m[3])),m.length>=7&&a.colors.push(parseFloat(m[4]),parseFloat(m[5]),parseFloat(m[6]));break;case"vn":a.normals.push(parseFloat(m[1]),parseFloat(m[2]),parseFloat(m[3]));break;case"vt":a.uvs.push(parseFloat(m[1]),parseFloat(m[2]))}}else if("f"===l){for(var d=n.substr(1).trim().split(/\s+/),f=[],v=0,g=d.length;v<g;v++){var b=d[v];if(b.length>0){var j=b.split("/");f.push(j)}}var x=f[0];for(v=1,g=f.length-1;v<g;v++){var y=f[v],L=f[v+1];a.addFace(x[0],y[0],L[0],x[1],y[1],L[1],x[2],y[2],L[2])}}else if("l"===l){var M=n.substring(1).trim().split(" "),V=[],w=[];if(-1===n.indexOf("/"))V=M;else for(var F=0,I=M.length;F<I;F++){var B=M[F].split("/");""!==B[0]&&V.push(B[0]),""!==B[1]&&w.push(B[1])}a.addLineGeometry(V,w)}else if("p"===l){var P=n.substr(1).trim().split(" ");a.addPointGeometry(P)}else if(null!==(h=t.exec(n))){var A=(" "+h[0].substr(1).trim()).substr(1);a.startObject(A)}else if(r.test(n))a.object.startMaterial(n.substring(7).trim(),a.materialLibraries);else if(e.test(n))a.materialLibraries.push(n.substring(7).trim());else{if("s"!==l){if("\0"===n)continue;throw new Error('THREE.OBJLoader: Unexpected line: "'+n+'"')}if((h=n.split(" ")).length>1){var C=h[1].trim().toLowerCase();a.object.smooth="0"!==C&&"off"!==C}else a.object.smooth=!0;(T=a.object.currentMaterial())&&(T.smooth=a.object.smooth)}a.finalize();var O=new Group;for(O.materialLibraries=[].concat(a.materialLibraries),u=0,p=a.objects.length;u<p;u++){var z=a.objects[u],E=z.geometry,U=z.materials,G="Line"===E.type,N="Points"===E.type,S=!1;if(0!==E.vertices.length){var _=new BufferGeometry;_.addAttribute("position",new Float32BufferAttribute(E.vertices,3)),E.normals.length>0?_.addAttribute("normal",new Float32BufferAttribute(E.normals,3)):_.computeVertexNormals(),E.colors.length>0&&(S=!0,_.addAttribute("color",new Float32BufferAttribute(E.colors,3))),E.uvs.length>0&&_.addAttribute("uv",new Float32BufferAttribute(E.uvs,2));for(var J,D=[],k=0,H=U.length;k<H;k++){var R=U[k],T=void 0;if(null!==this.materials)if(T=this.materials.create(R.name),!G||!T||T instanceof LineBasicMaterial){if(N&&T&&!(T instanceof PointsMaterial)){var q=new PointsMaterial({size:10,sizeAttenuation:!1});Material.prototype.copy.call(q,T),q.color.copy(T.color),q.map=T.map,T=q}}else{var K=new LineBasicMaterial;Material.prototype.copy.call(K,T),K.color.copy(T.color),T=K}T||((T=G?new LineBasicMaterial:N?new PointsMaterial({size:1,sizeAttenuation:!1}):new MeshPhongMaterial).name=R.name),T.flatShading=!R.smooth,T.vertexColors=S?VertexColors:NoColors,D.push(T)}if(D.length>1){for(k=0,H=U.length;k<H;k++)R=U[k],_.addGroup(R.groupStart,R.groupCount,k);J=G?new LineSegments(_,D):N?new Points(_,D):new Mesh(_,D)}else J=G?new LineSegments(_,D[0]):N?new Points(_,D[0]):new Mesh(_,D[0]);J.name=z.name,O.add(J)}}return console.timeEnd("OBJLoader"),O}}),s}();export{OBJLoader};