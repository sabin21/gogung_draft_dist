import{TempNode}from"./TempNode.js";function InputNode(e,t){(t=t||{}).shared=void 0!==t.shared&&t.shared,TempNode.call(this,e,t),this.readonly=!1}InputNode.prototype=Object.create(TempNode.prototype),InputNode.prototype.constructor=InputNode,InputNode.prototype.setReadonly=function(e){return this.readonly=e,this},InputNode.prototype.getReadonly=function(){return this.readonly},InputNode.prototype.copy=function(e){return TempNode.prototype.copy.call(this,e),void 0!==e.readonly&&(this.readonly=e.readonly),this},InputNode.prototype.createJSONNode=function(e){var t=TempNode.prototype.createJSONNode.call(this,e);return!0===this.readonly&&(t.readonly=this.readonly),t},InputNode.prototype.generate=function(e,t,o,r,n,a){o=e.getUuid(o||this.getUuid()),r=r||this.getType(e);var d=e.getNodeData(o);return this.getReadonly(e)&&void 0!==this.generateReadonly?this.generateReadonly(e,t,o,r,n,a):e.isShader("vertex")?(d.vertex||(d.vertex=e.createVertexUniform(r,this,n,a,this.getLabel())),e.format(d.vertex.name,r,t)):(d.fragment||(d.fragment=e.createFragmentUniform(r,this,n,a,this.getLabel())),e.format(d.fragment.name,r,t))};export{InputNode};