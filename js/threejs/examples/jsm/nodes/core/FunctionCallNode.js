import{TempNode}from"./TempNode.js";function FunctionCallNode(t,o){TempNode.call(this),this.setFunction(t,o)}FunctionCallNode.prototype=Object.create(TempNode.prototype),FunctionCallNode.prototype.constructor=FunctionCallNode,FunctionCallNode.prototype.nodeType="FunctionCall",FunctionCallNode.prototype.setFunction=function(t,o){this.value=t,this.inputs=o||[]},FunctionCallNode.prototype.getFunction=function(){return this.value},FunctionCallNode.prototype.getType=function(t){return this.value.getType(t)},FunctionCallNode.prototype.generate=function(t,o){for(var e=this.getType(t),n=this.value,i=n.build(t,o)+"( ",u=[],p=0;p<n.inputs.length;p++){var l=n.inputs[p],r=this.inputs[p]||this.inputs[l.name];u.push(r.build(t,t.getTypeByFormat(l.type)))}return i+=u.join(", ")+" )",t.format(i,e,o)},FunctionCallNode.prototype.copy=function(t){for(var o in TempNode.prototype.copy.call(this,t),t.inputs)this.inputs[o]=t.inputs[o];return this.value=t.value,this},FunctionCallNode.prototype.toJSON=function(t){var o=this.getJSONNode(t);if(!o){var e=this.value;if((o=this.createJSONNode(t)).value=this.value.toJSON(t).uuid,e.inputs.length){o.inputs={};for(var n=0;n<e.inputs.length;n++){var i=e.inputs[n],u=this.inputs[n]||this.inputs[i.name];o.inputs[i.name]=u.toJSON(t).uuid}}}return o};export{FunctionCallNode};