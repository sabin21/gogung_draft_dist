import{Math as _Math}from"../../../../build/three.module.js";function Node(e){this.uuid=_Math.generateUUID(),this.name="",this.type=e,this.userData={}}Node.prototype={constructor:Node,isNode:!0,analyze:function(e,t){t=t||{},e.analyzing=!0,this.build(e.addFlow(t.slot,t.cache,t.context),"v4"),e.clearVertexNodeCode(),e.clearFragmentNodeCode(),e.removeFlow(),e.analyzing=!1},analyzeAndFlow:function(e,t,i){return i=i||{},this.analyze(e,i),this.flow(e,t,i)},flow:function(e,t,i){i=i||{},e.addFlow(i.slot,i.cache,i.context);var n={};return n.result=this.build(e,t),n.code=e.clearNodeCode(),n.extra=e.context.extra,e.removeFlow(),n},build:function(e,t,i){t=t||this.getType(e,t);var n=e.getNodeData(i||this);return e.analyzing&&this.appendDepsNode(e,n,t),-1===e.nodes.indexOf(this)&&e.nodes.push(this),void 0!==this.updateFrame&&-1===e.updaters.indexOf(this)&&e.updaters.push(this),this.generate(e,t,i)},appendDepsNode:function(e,t,i){t.deps=(t.deps||0)+1;var n=e.getTypeLength(i);(n>(t.outputMax||0)||this.getType(e,i))&&(t.outputMax=n,t.output=i)},setName:function(e){return this.name=e,this},getName:function(){return this.name},getType:function(e,t){return"sampler2D"===t||"samplerCube"===t?t:this.type},getJSONNode:function(e){if(void 0!==e&&"string"!=typeof e&&void 0!==e.nodes[this.uuid])return e.nodes[this.uuid]},copy:function(e){return void 0!==e.name&&(this.name=e.name),void 0!==e.userData&&(this.userData=JSON.parse(JSON.stringify(e.userData))),this},createJSONNode:function(e){var t=void 0===e||"string"==typeof e,i={};if("string"!=typeof this.nodeType)throw new Error("Node does not allow serialization.");return i.uuid=this.uuid,i.nodeType=this.nodeType,""!==this.name&&(i.name=this.name),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),t||(e.nodes[this.uuid]=i),i},toJSON:function(e){return this.getJSONNode(e)||this.createJSONNode(e)}};export{Node};