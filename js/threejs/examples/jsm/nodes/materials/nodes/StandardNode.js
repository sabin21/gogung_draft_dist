import{UniformsLib,UniformsUtils}from"../../../../../build/three.module.js";import{Node}from"../../core/Node.js";import{ExpressionNode}from"../../core/ExpressionNode.js";import{ColorNode}from"../../inputs/ColorNode.js";import{FloatNode}from"../../inputs/FloatNode.js";import{SpecularMIPLevelNode}from"../../utils/SpecularMIPLevelNode.js";function StandardNode(){Node.call(this),this.color=new ColorNode(15658734),this.roughness=new FloatNode(.5),this.metalness=new FloatNode(.5),this.energyPreservation=!0}StandardNode.prototype=Object.create(Node.prototype),StandardNode.prototype.constructor=StandardNode,StandardNode.prototype.nodeType="Standard",StandardNode.prototype.build=function(e){var t;e.define("STANDARD");var i=this.clearcoat||this.clearcoatRoughness||this.clearCoatNormal;if(i&&e.define("CLEARCOAT"),e.requires.lights=!0,e.extensions.shaderTextureLOD=!0,e.isShader("vertex")){var o=this.position?this.position.analyzeAndFlow(e,"v3",{cache:"position"}):void 0;e.mergeUniform(UniformsUtils.merge([UniformsLib.fog,UniformsLib.lights])),UniformsLib.LTC_1&&(e.uniforms.ltc_1={value:void 0},e.uniforms.ltc_2={value:void 0}),e.addParsCode(["varying vec3 vViewPosition;","#ifndef FLAT_SHADED","\tvarying vec3 vNormal;","#endif","#include <fog_pars_vertex>","#include <morphtarget_pars_vertex>","#include <skinning_pars_vertex>","#include <shadowmap_pars_vertex>","#include <logdepthbuf_pars_vertex>","#include <clipping_planes_pars_vertex>"].join("\n"));var s=["#include <beginnormal_vertex>","#include <morphnormal_vertex>","#include <skinbase_vertex>","#include <skinnormal_vertex>","#include <defaultnormal_vertex>","#ifndef FLAT_SHADED","\tvNormal = normalize( transformedNormal );","#endif","#include <begin_vertex>"];o&&s.push(o.code,o.result?"transformed = "+o.result+";":""),s.push("#include <morphtarget_vertex>","#include <skinning_vertex>","#include <project_vertex>","#include <fog_vertex>","#include <logdepthbuf_vertex>","#include <clipping_planes_vertex>","\tvViewPosition = - mvPosition.xyz;","#include <worldpos_vertex>","#include <shadowmap_vertex>"),t=s.join("\n")}else{var a=new ExpressionNode("material.specularRoughness","f"),r=new ExpressionNode("material.clearcoatRoughness","f"),l={roughness:a,bias:new SpecularMIPLevelNode(a),viewNormal:new ExpressionNode("normal","v3"),gamma:!0},n={gamma:!0},c={roughness:r,bias:new SpecularMIPLevelNode(r),viewNormal:new ExpressionNode("clearcoatNormal","v3"),gamma:!0};this.mask&&this.mask.analyze(e),this.color.analyze(e,{slot:"color",context:n}),this.roughness.analyze(e),this.metalness.analyze(e),this.alpha&&this.alpha.analyze(e),this.normal&&this.normal.analyze(e),this.clearcoat&&this.clearcoat.analyze(e),this.clearcoatRoughness&&this.clearcoatRoughness.analyze(e),this.clearcoatNormal&&this.clearcoatNormal.analyze(e),this.reflectivity&&this.reflectivity.analyze(e),this.light&&this.light.analyze(e,{cache:"light"}),this.ao&&this.ao.analyze(e),this.ambient&&this.ambient.analyze(e),this.shadow&&this.shadow.analyze(e),this.emissive&&this.emissive.analyze(e,{slot:"emissive"}),this.environment&&(this.environment.analyze(e,{cache:"radiance",context:l,slot:"radiance"}),e.requires.irradiance&&this.environment.analyze(e,{cache:"irradiance",context:l,slot:"irradiance"})),this.sheen&&this.sheen.analyze(e);var h,d=this.mask?this.mask.flow(e,"b"):void 0,u=this.color.flow(e,"c",{slot:"color",context:n}),m=this.roughness.flow(e,"f"),f=this.metalness.flow(e,"f"),p=this.alpha?this.alpha.flow(e,"f"):void 0,g=this.normal?this.normal.flow(e,"v3"):void 0,v=this.clearcoat?this.clearcoat.flow(e,"f"):void 0,N=(r=this.clearcoatRoughness?this.clearcoatRoughness.flow(e,"f"):void 0,this.clearcoatNormal?this.clearcoatNormal.flow(e,"v3"):void 0),_=this.reflectivity?this.reflectivity.flow(e,"f"):void 0,w=this.light?this.light.flow(e,"v3",{cache:"light"}):void 0,y=this.ao?this.ao.flow(e,"f"):void 0,S=this.ambient?this.ambient.flow(e,"c"):void 0,x=this.shadow?this.shadow.flow(e,"c"):void 0,L=this.emissive?this.emissive.flow(e,"c",{slot:"emissive"}):void 0;this.environment&&(h={radiance:this.environment.flow(e,"c",{cache:"radiance",context:l,slot:"radiance"})},e.requires.irradiance&&(h.irradiance=this.environment.flow(e,"c",{cache:"irradiance",context:l,slot:"irradiance"})));var b=i&&h?this.environment.flow(e,"c",{cache:"clearcoat",context:c,slot:"environment"}):void 0,C=this.sheen?this.sheen.flow(e,"c"):void 0;e.requires.transparent=void 0!==p,e.addParsCode(["varying vec3 vViewPosition;","#ifndef FLAT_SHADED","\tvarying vec3 vNormal;","#endif","#include <dithering_pars_fragment>","#include <fog_pars_fragment>","#include <bsdfs>","#include <lights_pars_begin>","#include <lights_physical_pars_fragment>","#include <shadowmap_pars_fragment>","#include <logdepthbuf_pars_fragment>"].join("\n")),s=["#include <clipping_planes_fragment>","\t#include <normal_fragment_begin>","\t#include <clearcoat_normal_fragment_begin>","\tPhysicalMaterial material;","\tmaterial.diffuseColor = vec3( 1.0 );"],d&&s.push(d.code,"if ( ! "+d.result+" ) discard;"),s.push(u.code,"\tvec3 diffuseColor = "+u.result+";","\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );","#include <logdepthbuf_fragment>",m.code,"\tfloat roughnessFactor = "+m.result+";",f.code,"\tfloat metalnessFactor = "+f.result+";"),p&&s.push(p.code,"#ifdef ALPHATEST","\tif ( "+p.result+" <= ALPHATEST ) discard;","#endif"),g&&s.push(g.code,"normal = "+g.result+";"),N&&s.push(N.code,"clearcoatNormal = "+N.result+";"),s.push("material.diffuseColor = "+(w?"vec3( 1.0 )":"diffuseColor * (1.0 - metalnessFactor)")+";","material.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );"),v?s.push(v.code,"material.clearcoat = saturate( "+v.result+" );"):i&&s.push("material.clearcoat = 0.0;"),r?s.push(r.code,"material.clearcoatRoughness = clamp( "+r.result+", 0.04, 1.0 );"):i&&s.push("material.clearcoatRoughness = 0.0;"),C&&s.push("material.sheenColor = "+C.result+";"),_?s.push(_.code,"material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( "+_.result+" ) ), diffuseColor, metalnessFactor );"):s.push("material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor, metalnessFactor );"),s.push("#include <lights_fragment_begin>"),w&&(s.push(w.code,"reflectedLight.directDiffuse = "+w.result+";"),s.push("diffuseColor *= 1.0 - metalnessFactor;","reflectedLight.directDiffuse *= diffuseColor;","reflectedLight.indirectDiffuse *= diffuseColor;")),y&&s.push(y.code,"reflectedLight.indirectDiffuse *= "+y.result+";","float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );","reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, "+y.result+", material.specularRoughness );"),S&&s.push(S.code,"reflectedLight.indirectDiffuse += "+S.result+";"),x&&s.push(x.code,"reflectedLight.directDiffuse *= "+x.result+";","reflectedLight.directSpecular *= "+x.result+";"),L&&s.push(L.code,"reflectedLight.directDiffuse += "+L.result+";"),h&&(s.push(h.radiance.code),e.requires.irradiance&&s.push(h.irradiance.code),b&&s.push(b.code,"clearcoatRadiance += "+b.result+";"),s.push("radiance += "+h.radiance.result+";"),e.requires.irradiance&&s.push("iblIrradiance += PI * "+h.irradiance.result+";")),s.push("#include <lights_fragment_end>"),s.push("vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular;"),p?s.push("gl_FragColor = vec4( outgoingLight, "+p.result+" );"):s.push("gl_FragColor = vec4( outgoingLight, 1.0 );"),s.push("#include <tonemapping_fragment>","#include <encodings_fragment>","#include <fog_fragment>","#include <premultiplied_alpha_fragment>","#include <dithering_fragment>"),t=s.join("\n")}return t},StandardNode.prototype.copy=function(e){return Node.prototype.copy.call(this,e),e.position&&(this.position=e.position),this.color=e.color,this.roughness=e.roughness,this.metalness=e.metalness,e.mask&&(this.mask=e.mask),e.alpha&&(this.alpha=e.alpha),e.normal&&(this.normal=e.normal),e.clearcoat&&(this.clearcoat=e.clearcoat),e.clearcoatRoughness&&(this.clearcoatRoughness=e.clearcoatRoughness),e.clearcoatNormal&&(this.clearcoatNormal=e.clearcoatNormal),e.reflectivity&&(this.reflectivity=e.reflectivity),e.light&&(this.light=e.light),e.shadow&&(this.shadow=e.shadow),e.ao&&(this.ao=e.ao),e.emissive&&(this.emissive=e.emissive),e.ambient&&(this.ambient=e.ambient),e.environment&&(this.environment=e.environment),e.sheen&&(this.sheen=e.sheen),this},StandardNode.prototype.toJSON=function(e){var t=this.getJSONNode(e);return t||(t=this.createJSONNode(e),this.position&&(t.position=this.position.toJSON(e).uuid),t.color=this.color.toJSON(e).uuid,t.roughness=this.roughness.toJSON(e).uuid,t.metalness=this.metalness.toJSON(e).uuid,this.mask&&(t.mask=this.mask.toJSON(e).uuid),this.alpha&&(t.alpha=this.alpha.toJSON(e).uuid),this.normal&&(t.normal=this.normal.toJSON(e).uuid),this.clearcoat&&(t.clearcoat=this.clearcoat.toJSON(e).uuid),this.clearcoatRoughness&&(t.clearcoatRoughness=this.clearcoatRoughness.toJSON(e).uuid),this.clearcoatNormal&&(t.clearcoatNormal=this.clearcoatNormal.toJSON(e).uuid),this.reflectivity&&(t.reflectivity=this.reflectivity.toJSON(e).uuid),this.light&&(t.light=this.light.toJSON(e).uuid),this.shadow&&(t.shadow=this.shadow.toJSON(e).uuid),this.ao&&(t.ao=this.ao.toJSON(e).uuid),this.emissive&&(t.emissive=this.emissive.toJSON(e).uuid),this.ambient&&(t.ambient=this.ambient.toJSON(e).uuid),this.environment&&(t.environment=this.environment.toJSON(e).uuid),this.sheen&&(t.sheen=this.sheen.toJSON(e).uuid)),t};export{StandardNode};