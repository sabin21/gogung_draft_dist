import{TempNode}from"../core/TempNode.js";import{NodeLib}from"../core/NodeLib.js";function NormalNode(o){TempNode.call(this,"v3"),this.scope=o||NormalNode.VIEW}NormalNode.LOCAL="local",NormalNode.WORLD="world",NormalNode.VIEW="view",NormalNode.prototype=Object.create(TempNode.prototype),NormalNode.prototype.constructor=NormalNode,NormalNode.prototype.nodeType="Normal",NormalNode.prototype.getShared=function(){return this.scope===NormalNode.WORLD},NormalNode.prototype.generate=function(o,e){var r;switch(this.scope){case NormalNode.VIEW:r=o.isShader("vertex")?"transformedNormal":"geometryNormal";break;case NormalNode.LOCAL:o.isShader("vertex")?r="objectNormal":(o.requires.normal=!0,r="vObjectNormal");break;case NormalNode.WORLD:o.isShader("vertex")?r="inverseTransformDirection( transformedNormal, viewMatrix ).xyz":(o.requires.worldNormal=!0,r="vWNormal")}return o.format(r,this.getType(o),e)},NormalNode.prototype.copy=function(o){return TempNode.prototype.copy.call(this,o),this.scope=o.scope,this},NormalNode.prototype.toJSON=function(o){var e=this.getJSONNode(o);return e||((e=this.createJSONNode(o)).scope=this.scope),e},NodeLib.addKeyword("viewNormal",(function(){return new NormalNode(NormalNode.VIEW)})),NodeLib.addKeyword("localNormal",(function(){return new NormalNode(NormalNode.NORMAL)})),NodeLib.addKeyword("worldNormal",(function(){return new NormalNode(NormalNode.WORLD)}));export{NormalNode};