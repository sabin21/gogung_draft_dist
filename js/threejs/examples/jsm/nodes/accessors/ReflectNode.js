import{TempNode}from"../core/TempNode.js";import{PositionNode}from"./PositionNode.js";import{NormalNode}from"./NormalNode.js";function ReflectNode(e){TempNode.call(this,"v3"),this.scope=e||ReflectNode.CUBE}ReflectNode.CUBE="cube",ReflectNode.SPHERE="sphere",ReflectNode.VECTOR="vector",ReflectNode.prototype=Object.create(TempNode.prototype),ReflectNode.prototype.constructor=ReflectNode,ReflectNode.prototype.nodeType="Reflect",ReflectNode.prototype.getUnique=function(e){return!e.context.viewNormal},ReflectNode.prototype.getType=function(){return this.scope===ReflectNode.SPHERE?"v2":this.type},ReflectNode.prototype.generate=function(e,o){var t=this.getUnique(e);if(e.isShader("fragment")){var c;switch(this.scope){case ReflectNode.VECTOR:var r=e.context.viewNormal||new NormalNode,d=e.context.roughness,i=r.build(e,"v3"),l=new PositionNode(PositionNode.VIEW).build(e,"v3"),N=d?d.build(e,"f"):void 0,f=`reflect( -normalize( ${l} ), ${i} )`;r&&N&&(f=`normalize( mix( ${f}, ${i}, ${N} * ${N} ) )`);var n=`inverseTransformDirection( ${f}, viewMatrix )`;t?(e.addNodeCode(`vec3 reflectVec = ${n};`),c="reflectVec"):c=n;break;case ReflectNode.CUBE:n="vec3( -"+(p=new ReflectNode(ReflectNode.VECTOR).build(e,"v3"))+".x, "+p+".yz )",t?(e.addNodeCode(`vec3 reflectCubeVec = ${n};`),c="reflectCubeVec"):c=n;break;case ReflectNode.SPHERE:var p;n="normalize( ( viewMatrix * vec4( "+(p=new ReflectNode(ReflectNode.VECTOR).build(e,"v3"))+", 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) ).xy * 0.5 + 0.5",t?(e.addNodeCode(`vec2 reflectSphereVec = ${n};`),c="reflectSphereVec"):c=n}return e.format(c,this.getType(e),o)}return console.warn("THREE.ReflectNode is not compatible with "+e.shader+" shader."),e.format("vec3( 0.0 )",this.type,o)},ReflectNode.prototype.toJSON=function(e){var o=this.getJSONNode(e);return o||((o=this.createJSONNode(e)).scope=this.scope),o};export{ReflectNode};