import{LinearFilter,Mesh,OrthographicCamera,PlaneBufferGeometry,RGBAFormat,Scene,Vector2,WebGLRenderTarget}from"../../../../build/three.module.js";import{NodeMaterial}from"../materials/NodeMaterial.js";import{ScreenNode}from"../inputs/ScreenNode.js";function NodePostProcessing(e,t){if(void 0===t){var r={minFilter:LinearFilter,magFilter:LinearFilter,format:RGBAFormat,stencilBuffer:!1},i=e.getDrawingBufferSize(new Vector2);t=new WebGLRenderTarget(i.width,i.height,r)}this.renderer=e,this.renderTarget=t,this.output=new ScreenNode,this.material=new NodeMaterial,this.camera=new OrthographicCamera(-1,1,1,-1,0,1),this.scene=new Scene,this.quad=new Mesh(new PlaneBufferGeometry(2,2),this.material),this.quad.frustumCulled=!1,this.scene.add(this.quad),this.needsUpdate=!0}NodePostProcessing.prototype={constructor:NodePostProcessing,render:function(e,t,r){this.needsUpdate&&(this.material.dispose(),this.material.fragment.value=this.output,this.material.build(),this.material.uniforms.renderTexture&&(this.material.uniforms.renderTexture.value=this.renderTarget.texture),this.needsUpdate=!1),r.setRenderer(this.renderer).setRenderTexture(this.renderTarget.texture),this.renderer.setRenderTarget(this.renderTarget),this.renderer.render(e,t),r.updateNode(this.material),this.renderer.setRenderTarget(null),this.renderer.render(this.scene,this.camera)},setPixelRatio:function(e){this.renderer.setPixelRatio(e);var t=this.renderer.getSize(new Vector2);this.setSize(t.width,t.height)},setSize:function(e,t){var r=this.renderer.getPixelRatio();this.renderTarget.setSize(e*r,t*r),this.renderer.setSize(e,t)},copy:function(e){return this.output=e.output,this},toJSON:function(e){if((void 0===e||"string"==typeof e)&&(e={nodes:{}}),e&&!e.post&&(e.post={}),!e.post[this.uuid]){var t={};t.uuid=this.uuid,t.type="NodePostProcessing",e.post[this.uuid]=t,""!==this.name&&(t.name=this.name),"{}"!==JSON.stringify(this.userData)&&(t.userData=this.userData),t.output=this.output.toJSON(e).uuid}return e.post=this.uuid,e}};export{NodePostProcessing};