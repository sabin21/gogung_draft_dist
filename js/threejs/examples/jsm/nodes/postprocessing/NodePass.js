import{Math as _Math}from"../../../../build/three.module.js";import{ShaderPass}from"../../postprocessing/ShaderPass.js";import{NodeMaterial}from"../materials/NodeMaterial.js";import{ScreenNode}from"../inputs/ScreenNode.js";function NodePass(){ShaderPass.call(this),this.name="",this.uuid=_Math.generateUUID(),this.userData={},this.textureID="renderTexture",this.input=new ScreenNode,this.material=new NodeMaterial,this.needsUpdate=!0}NodePass.prototype=Object.create(ShaderPass.prototype),NodePass.prototype.constructor=NodePass,NodePass.prototype.render=function(){this.needsUpdate&&(this.material.dispose(),this.material.fragment.value=this.input,this.needsUpdate=!1),this.uniforms=this.material.uniforms,ShaderPass.prototype.render.apply(this,arguments)},NodePass.prototype.copy=function(s){return this.input=s.input,this},NodePass.prototype.toJSON=function(s){if((void 0===s||"string"==typeof s)&&(s={nodes:{}}),s&&!s.passes&&(s.passes={}),!s.passes[this.uuid]){var t={};t.uuid=this.uuid,t.type="NodePass",s.passes[this.uuid]=t,""!==this.name&&(t.name=this.name),"{}"!==JSON.stringify(this.userData)&&(t.userData=this.userData),t.input=this.input.toJSON(s).uuid}return s.pass=this.uuid,s};export{NodePass};