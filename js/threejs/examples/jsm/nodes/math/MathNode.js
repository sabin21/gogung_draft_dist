import{TempNode}from"../core/TempNode.js";function MathNode(t,e,h,a){TempNode.call(this),this.a=t,"string"!=typeof e?this.b=e:a=e,"string"!=typeof h?this.c=h:a=h,this.method=a}MathNode.RAD="radians",MathNode.DEG="degrees",MathNode.EXP="exp",MathNode.EXP2="exp2",MathNode.LOG="log",MathNode.LOG2="log2",MathNode.SQRT="sqrt",MathNode.INV_SQRT="inversesqrt",MathNode.FLOOR="floor",MathNode.CEIL="ceil",MathNode.NORMALIZE="normalize",MathNode.FRACT="fract",MathNode.SATURATE="saturate",MathNode.SIN="sin",MathNode.COS="cos",MathNode.TAN="tan",MathNode.ASIN="asin",MathNode.ACOS="acos",MathNode.ARCTAN="atan",MathNode.ABS="abs",MathNode.SIGN="sign",MathNode.LENGTH="length",MathNode.NEGATE="negate",MathNode.INVERT="invert",MathNode.MIN="min",MathNode.MAX="max",MathNode.MOD="mod",MathNode.STEP="step",MathNode.REFLECT="reflect",MathNode.DISTANCE="distance",MathNode.DOT="dot",MathNode.CROSS="cross",MathNode.POW="pow",MathNode.MIX="mix",MathNode.CLAMP="clamp",MathNode.REFRACT="refract",MathNode.SMOOTHSTEP="smoothstep",MathNode.FACEFORWARD="faceforward",MathNode.prototype=Object.create(TempNode.prototype),MathNode.prototype.constructor=MathNode,MathNode.prototype.nodeType="Math",MathNode.prototype.getNumInputs=function(){switch(this.method){case MathNode.MIX:case MathNode.CLAMP:case MathNode.REFRACT:case MathNode.SMOOTHSTEP:case MathNode.FACEFORWARD:return 3;case MathNode.MIN:case MathNode.MAX:case MathNode.MOD:case MathNode.STEP:case MathNode.REFLECT:case MathNode.DISTANCE:case MathNode.DOT:case MathNode.CROSS:case MathNode.POW:return 2;default:return 1}},MathNode.prototype.getInputType=function(t){var e=t.getTypeLength(this.a.getType(t)),h=this.b?t.getTypeLength(this.b.getType(t)):0,a=this.c?t.getTypeLength(this.c.getType(t)):0;return e>h&&e>a?this.a.getType(t):h>a?this.b.getType(t):this.c.getType(t)},MathNode.prototype.getType=function(t){switch(this.method){case MathNode.LENGTH:case MathNode.DISTANCE:case MathNode.DOT:return"f";case MathNode.CROSS:return"v3"}return this.getInputType(t)},MathNode.prototype.generate=function(t,e){var h,a,o,d=this.a?t.getTypeLength(this.a.getType(t)):0,s=this.b?t.getTypeLength(this.b.getType(t)):0,N=this.c?t.getTypeLength(this.c.getType(t)):0,i=this.getInputType(t),M=this.getType(t);switch(this.method){case MathNode.NEGATE:return t.format("( -"+this.a.build(t,i)+" )",i,e);case MathNode.INVERT:return t.format("( 1.0 - "+this.a.build(t,i)+" )",i,e);case MathNode.CROSS:h=this.a.build(t,"v3"),a=this.b.build(t,"v3");break;case MathNode.STEP:h=this.a.build(t,1===d?"f":i),a=this.b.build(t,i);break;case MathNode.MIN:case MathNode.MAX:case MathNode.MOD:h=this.a.build(t,i),a=this.b.build(t,1===s?"f":i);break;case MathNode.REFRACT:h=this.a.build(t,i),a=this.b.build(t,i),o=this.c.build(t,"f");break;case MathNode.MIX:h=this.a.build(t,i),a=this.b.build(t,i),o=this.c.build(t,1===N?"f":i);break;default:h=this.a.build(t,i),this.b&&(a=this.b.build(t,i)),this.c&&(o=this.c.build(t,i))}var r=[];r.push(h),a&&r.push(a),o&&r.push(o);var c=this.getNumInputs(t);if(r.length!==c)throw Error(`Arguments not match used in "${this.method}". Require ${c}, currently ${r.length}.`);return t.format(this.method+"( "+r.join(", ")+" )",M,e)},MathNode.prototype.copy=function(t){return TempNode.prototype.copy.call(this,t),this.a=t.a,this.b=t.b,this.c=t.c,this.method=t.method,this},MathNode.prototype.toJSON=function(t){var e=this.getJSONNode(t);return e||((e=this.createJSONNode(t)).a=this.a.toJSON(t).uuid,this.b&&(e.b=this.b.toJSON(t).uuid),this.c&&(e.c=this.c.toJSON(t).uuid),e.method=this.method),e};export{MathNode};