import{Vector3}from"../../../../build/three.module.js";import{Vector3Node}from"../inputs/Vector3Node.js";function VelocityNode(t,e){Vector3Node.call(this),this.params={},this.velocity=new Vector3,this.setTarget(t),this.setParams(e)}VelocityNode.prototype=Object.create(Vector3Node.prototype),VelocityNode.prototype.constructor=VelocityNode,VelocityNode.prototype.nodeType="Velocity",VelocityNode.prototype.getReadonly=function(){return!1},VelocityNode.prototype.setParams=function(t){"elastic"===this.params.type&&(delete this.moment,delete this.speed,delete this.springVelocity,delete this.lastVelocity),this.params=t||{},"elastic"===this.params.type&&(this.moment=new Vector3,this.speed=new Vector3,this.springVelocity=new Vector3,this.lastVelocity=new Vector3)},VelocityNode.prototype.setTarget=function(t){this.target&&(delete this.position,delete this.oldPosition),this.target=t,t&&(this.position=t.getWorldPosition(this.position||new Vector3),this.oldPosition=this.position.clone())},VelocityNode.prototype.updateFrameVelocity=function(){this.target&&(this.position=this.target.getWorldPosition(this.position||new Vector3),this.velocity.subVectors(this.position,this.oldPosition),this.oldPosition.copy(this.position))},VelocityNode.prototype.updateFrame=function(t){if(this.updateFrameVelocity(t),"elastic"===this.params.type){var e=t.delta*(this.params.fps||60),i=Math.pow(this.params.spring,e),o=Math.pow(this.params.damping,e);this.velocity.multiplyScalar(Math.exp(-this.params.damping*e)),this.velocity.add(this.springVelocity),this.velocity.add(this.speed.multiplyScalar(o).multiplyScalar(1-i)),this.speed.subVectors(this.velocity,this.lastVelocity),this.springVelocity.add(this.speed),this.springVelocity.multiplyScalar(i),this.moment.add(this.springVelocity),this.moment.multiplyScalar(o),this.lastVelocity.copy(this.velocity),this.value.copy(this.moment)}else this.value.copy(this.velocity)},VelocityNode.prototype.copy=function(t){return Vector3Node.prototype.copy.call(this,t),t.target&&this.setTarget(t.target),this.setParams(t.params),this},VelocityNode.prototype.toJSON=function(t){var e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),this.target&&(e.target=this.target.uuid),e.params=JSON.parse(JSON.stringify(this.params))),e};export{VelocityNode};